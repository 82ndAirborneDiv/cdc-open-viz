@mixin breakpoint($class) {
  @if $class == xs {
    @media (max-width: 767px) { @content; }
  }

  @else if $class == sm {
    @media (min-width: 768px) { @content; }
  }

  @else if $class == md {
    @media (min-width: 960px) { @content; }
  }

  @else if $class == lg {
    @media (min-width: 1300px) { @content; }
  }

  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg";
  }
}

// Imports
@import "reset";
@import "variables";

.cdc-open-viz-module {
  color: $baseColor;
}

.inline-icon {
  width: 1em;
  height: auto;
  font-size: 1rem;
  color: inherit;
  path {
    fill: currentColor;
  }
}

// Editor Styles
.btn {
  background: #005eaa;
  color: #fff;
  border: 0;
  padding: .4em .8em;
  font-size: 1em;
  display: block;
  border-radius: 5px;
  transition: .1s all;
  cursor: pointer;
  &.full-width {
    width: 100%;
  }
  &.secondary {
    font-size: .8em;
    padding: .3em 1em;
    background: rgba(0, 0, 0, 0.3);
    display: inline-block;
    margin-bottom: 1em;
    &:hover {
      background: rgba(0,0,0,.5);
    }
  }
  &:hover {
    transition: .1s all;
    background: lighten(#005eaa, 5%);
  }
}

input[type="text"], input[role="combobox"], input[type="number"], textarea {
  padding: .5em .5em;
  font-size: 1em;
  font-family: sans-serif;
  border: rgba(0,0,0,.3) 1px solid;
  &:focus {
    border: rgba(0,0,0,.7) 1px solid;
    outline: 0;
  }
}
textarea {
  min-height: 140px;
}
select {
  width: 100%;
  font-size: 1.4em;
  text-transform: none;
}